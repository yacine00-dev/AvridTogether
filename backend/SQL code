CREATE DATABASE basededonnées;
USE basededonnées;
 CREATE TABLE admins (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
	email VARCHAR(100) UNIQUE NOT NULL,
    mot_de_passe TEXT NOT NULL,
	telephone VARCHAR(15) UNIQUE NOT NULL,
    date_inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE utilisateur (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    mot_de_passe TEXT NOT NULL,
    telephone VARCHAR(15) UNIQUE NOT NULL,
    type_utilisateur ENUM('conducteur', 'passager') NOT NULL,
	permis_conduire_date_delivrance DATE NULL,
    permis_conduire_date_expiration DATE NULL,
    permis_conduire_image TEXT NULL,
    date_inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP
 );

CREATE TABLE voitures (
    id SERIAL PRIMARY KEY,
    conducteur_id BIGINT UNSIGNED NOT NULL,
    marque VARCHAR(50) NOT NULL,
    modele VARCHAR(50) NOT NULL,
    annee INT CHECK (annee >= 2000),
    immatriculation VARCHAR(20) UNIQUE NOT NULL,
    nombre_places INT CHECK (nombre_places > 0),
    couleur VARCHAR(30),
    FOREIGN KEY (conducteur_id) REFERENCES utilisateur(id) ON DELETE CASCADE
);

CREATE TABLE trajets (
    id SERIAL PRIMARY KEY,
    conducteur_id BIGINT UNSIGNED NOT NULL,
    ville_depart VARCHAR(100) NOT NULL,
    ville_arrivee VARCHAR(100) NOT NULL,
    date_depart TIMESTAMP NOT NULL,
    duree_estimee TIME,
    nombre_places_disponibles INT CHECK (nombre_places_disponibles > 0),
    prix DECIMAL(10,2) CHECK (prix >= 0),
    statut ENUM('disponible', 'complet', 'annulé') DEFAULT 'disponible',
    FOREIGN KEY (conducteur_id) REFERENCES utilisateur(id) ON DELETE CASCADE
);

CREATE TABLE reservations (
    id SERIAL PRIMARY KEY,
    trajet_id BIGINT UNSIGNED NOT NULL,
    passager_id BIGINT UNSIGNED NOT NULL,
    statut ENUM('en attente', 'confirmée', 'annulée') DEFAULT 'en attente',
    date_reservation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (trajet_id) REFERENCES trajets(id) ON DELETE CASCADE,
    FOREIGN KEY (passager_id) REFERENCES utilisateur(id) ON DELETE CASCADE
);

CREATE TABLE paiements (
    id SERIAL PRIMARY KEY,
    reservation_id BIGINT UNSIGNED NOT NULL,
    montant DECIMAL(10,2) CHECK (montant > 0),
    date_paiement TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    methode_paiement ENUM('carte dahabia', 'ccp') NOT NULL,
    statut ENUM('en attente', 'effectué', 'échec') DEFAULT 'en attente',
    FOREIGN KEY (reservation_id) REFERENCES reservations(id) ON DELETE CASCADE
);
CREATE TABLE avis (
    id SERIAL PRIMARY KEY,
    conducteur_id BIGINT UNSIGNED NOT NULL,
    passager_id BIGINT UNSIGNED NOT NULL,
    note INT CHECK (note BETWEEN 1 AND 5),
    commentaire TEXT,
    date_avis TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (conducteur_id) REFERENCES utilisateur(id) ON DELETE CASCADE,
    FOREIGN KEY (passager_id) REFERENCES utilisateur(id) ON DELETE CASCADE
);
